
namespace = report_dragon

#####################

## Report & Searching Dragon Events

# report_dragon.0001 see dragon
# report_dragon.0001 send a search party

# by will
#####################



scripted_trigger report_dragon_has_mountains = {
    # Target is located in an appropriate region & has suitable terrain.
    OR = {
        terrain = mountains
    }
}




# see dragon and make county be destructed
report_dragon.0001 = {

    title = report_dragon.0001.t
    desc = report_dragon.0001.d
    theme = secret

	right_portrait = {
    		character = ROOT
    		animation = worry
    }
	left_portrait = {
        trigger_if = {
            limit = {
                is_married = yes
            }
        }
        character = ROOT.primary_spouse
        animation = worry
    }

    trigger = {
        is_landed = yes
        # is_in_civil_war = no
        NOT = {
            exists = had_report_dragon_0001
        }
        # TODO  check every province
    }

    immediate = {
        random_realm_province = {
            limit = {
                report_dragon_has_mountains = yes
            }
#            alternative_limit = {
#                report_dragon_has_mountains = yes
#            }
            county = {
                save_scope_as = develop_county
            }
        }

        # todo check target_courtier is null or not.
 		add_character_flag = {
			flag = destroy_by_dragon_modifier
			days = 365
		}
		hidden_effect = {
		    scope:develop_county = {
                add_county_modifier = {
                    modifier = destroy_by_dragon_modifier
                    year = destroy_by_dragon_modifier_time
                }
            }
		}

        set_global_variable = {
             name = begin_county
             value = scope:develop_county
        }

        set_global_variable = {
             name = had_report_dragon_0001
             value = yes
             days = had_report_dragon_0001_interval
        }
	}
    option = {
        name = report_dragon.0001.option.deceitful
        trigger = {
            OR = {
                # fickle or deceitful or paranoid
                has_trait = fickle
                has_trait = deceitful
                has_trait = paranoid
            }
        }
        has_trait = fickle
        has_trait = deceitful
        has_trait = paranoid
    }

    option = {
        name = report_dragon.0001.option.sadistic
        trigger = {
            has_trait = sadistic
        }
        stress_impact = {
            sadistic = minor_stress_impact_loss
        }
        # get courtier who hate ROOT
        random_courtier = {
           limit = {
               is_available_ai_adult = yes
               is_female = no
               NOT = {
                    is_spouse_of = ROOT
               }
               opinion = {
                  target = ROOT
                  value  < -50
               }
           }
           save_scope_as = target_courtier
        }

        if = {
            limit = {
                NOT = {exists = scope:target_courtier}
            }
            random_courtier = {
                limit = {
                    is_available_ai_adult = yes
                    NOT = {
                        is_spouse_of = ROOT
                    }
                }
                save_scope_as = target_courtier
            }
        }
        custom_tooltip = report_dragon.0001.tooltip.sadistic
        # todo remove all judge about flavor
#        flavor = {
#            triggered_desc = {
#                trigger = {
#                    scope:target_courtier = {
#                        opinion = {
#                            target = ROOT
#                            value <= 90
#                        }
#                    }
#                }
#                desc = report_dragon.0001.flavor.sadistic.1
#            }
#            triggered_desc = {
#                trigger = {
#                    exists = scope:target_courtier
#                    NOT = {
#                        scope:target_courtier = {
#                            opinion = {
#                                target = ROOT
#                                value <= 90
#                            }
#                        }
#                    }
#                }
#                desc = report_dragon.0001.flavor.sadistic.2
#            }
#        }

        scope:target_courtier = {
            add_opinion = {
                target = ROOT
                modifier = resentment_liege_opinion
                opinion = medium_prestige_coefficient_negative
            }
        }

        # searching effect
        trigger_event = {
            id = report_dragon.0002
            days = { 10 20 }
        }
    }

    option = {
        name = report_dragon.0001.option.calm
        trigger = {
            has_trait = calm
        }
        trait = calm
    }
    option = {
        name = report_dragon.0001.option.craven
        trigger = {
            has_trait = craven
        }
        trait = craven
        stress_impact = {
            craven = miniscule_stress_impact_gain
        }

        if = {
            limit = {
                exists = ROOT.primary_spouse
            }
            ROOT.primary_spouse =  {
                if = {
                    limit = {
                        NOT = {has_trait = craven}
                        NOT = {has_trait = compassionate}
                    }
                    add_opinion = {
                        target = ROOT
                        modifier = weak_excuses
                    }
                }
                else = {
                    add_opinion = {
                        target = ROOT
                        modifier = pity_opinion
                        opinion = 15
                    }
                }
            }
        }
        add_prestige = {
            value = prestige_level
            multiply = medium_prestige_coefficient_negative
        }

    }
    option = {
        name = report_dragon.0001.option.humble
        trigger = {
            OR = {
                has_trait = humble
                has_trait = zealous
            }
        }
        ordered_courtier = {
            limit = {
                is_available_ai_adult = yes
                NOT = {
                    is_spouse_of = ROOT
                }
                NOR = {
                   has_trait = cynical
                }
            }
            order_by = piety_level
            save_scope_as = target_courtier
        }

        if = {
            limit = {
                exists = scope:target_courtier
            }
            scope:target_courtier = {
                add_piety = {
                    value = piety_level
                    multiply = medium_piety_coefficient_positive
                }
            }

            custom_tooltip = report_dragon.0001.tooltip.zealous.1
        }else = {
            custom_tooltip = report_dragon.0001.tooltip.zealous.2
        }

        flavor = {
            triggered_desc = {
                trigger = {
                    NOT = { exists =  scope:target_courtier}
                }
                desc = report_dragon.0001.flavor.zealous.2
            }
            triggered_desc = {
                trigger = {
                    exists =  scope:target_courtier
                }
                desc = report_dragon.0001.flavor.zealous.1
            }
        }

        add_piety = {
            value = piety_level
            multiply = medium_prestige_coefficient_positive
        }

        # searching effect
        trigger_event = {
            id = report_dragon.0002
            days = {10 20}
        }

    }

    option = {
        name = report_dragon.0001.option.diligent
        trigger = {
            OR = {
                has_trait = diligent
                has_trait = ambitious
            }
        }

        random_courtier = {
            limit = {
                is_available_ai_adult = yes
            }
            save_scope_as = target_courtier
        }
        flavor = report_dragon.0001.flavor.diligent
        custom_tooltip = report_dragon.0001.tooltip.diligent

        add_prestige = {
            value = prestige_level
            multiply = medium_prestige_coefficient_positive
        }

        # searching effect
        trigger_event = {
            id = report_dragon.0002
            days = {10 20}
        }

    }
    option = {
        # arrogant or cynical
        name = report_dragon.0001.option.arrogant
        trigger = {
            OR = {
                has_trait = arrogant
                has_trait = cynical
            }
        }
    }

    option = {
        # content or lazy or impatient
        name = report_dragon.0001.option.lazy
        trigger = {
            OR = {
                has_trait = content
                has_trait = lazy
                has_trait = impatient
            }
        }
        # make sure root has spouse
        IF = {
            limit = {
                exists = ROOT.primary_spouse
            }
            ROOT.primary_spouse =  {
                if = {
                    limit = {
                        NOR = {
                            has_trait = content
                            has_trait = lazy
                            has_trait = impatient
                        }
                    }
                    add_opinion = {
                        target = ROOT
                        modifier = disappointed_opinion
                        opinion = -10
                    }
                }
                else = {
                    add_opinion = {
                        target = ROOT
                        modifier = pleased_opinion
                        opinion = 15
                    }
                }
            }
        }
        add_prestige = {
            value = prestige_level
            multiply = small_prestige_coefficient_negative
        }
    }
    option = {
        name = report_dragon.0001.option.honest
        trigger = {
            OR = {
                has_trait = honest
                has_trait = stubborn
            }
        }

        random_courtier = {
            limit = {
                is_adult = yes
                NOT = {
                    is_spouse_of = ROOT
                }
                opinion = {
                    target = ROOT
                    value > 50
                }
            }
            save_scope_as = target_courtier
        }
        if = {
            limit = {
                NOT = {exists = scope:target_courtier}
            }
            random_courtier = {
                limit = {
                    is_adult = yes
                    NOT = {
                        is_spouse_of = ROOT
                    }
                }
                save_scope_as = target_courtier
            }
        }
        custom_tooltip = report_dragon.0001.tooltip.d_2

        if = {
            limit = {
                scope:target_courtier = {
                    opinion = {
                        target = ROOT
                        value >= 0
                    }
                    NOR = {
                        has_trait = craven
                        has_trait = lazy
                    }
                }
            }
            scope:target_courtier = {
                add_opinion = {
                    target = ROOT
                    modifier = thank_liege_opinion
                    opinion = 20
                }
            }
        }
        else = {
            scope:target_courtier = {
                add_opinion = {
                    target = ROOT
                    modifier = resentment_liege_opinion
                    opinion = -20
                }
            }
        }

        flavor = {
            triggered_desc = {
                trigger = {
                    scope:target_courtier = {judge_character_opinion_less_or_equal = {CHARACTER_TARGET = ROOT CRITICAL = 50 } }
                }
                desc = report_dragon.0001.flavor.d_1
            }
            triggered_desc = {
                trigger = {
                    NOT = { scope:target_courtier = {judge_character_opinion_less_or_equal = { CHARACTER_TARGET = ROOT CRITICAL = 50 }}}
                }
                desc = report_dragon.0001.flavor.d_2
            }
        }

        # searching effect
        trigger_event = {
            id = report_dragon.0002
            days = 1
        }

    }

    option = {
        name = report_dragon.0001.option.shy
        trigger = {
            has_trait = shy
        }
        has_trait = shy
    }
    option = {
        name = report_dragon.0001.option.patient
        trigger = {
            has_trait = patient
        }
        has_trait = patient
    }
    option = {
        name = report_dragon.0001.option.gluttonous
        trigger = {
            has_trait = gluttonous
        }
        has_trait = gluttonous
        ROOT.primary_spouse =  {
            if = {
                limit = {
                    NOT = {
                        has_trait = gluttonous
                    }
                }
                add_opinion = {
                    target = ROOT
                    modifier = bored_opinion
                    opinion = -10
                }
            }
            else = {
                add_opinion = {
                    target = ROOT
                    modifier = pleased_opinion
                    opinion = 20
                }
            }
        }
    }
    option = {
        name = report_dragon.0001.option.brave
        trigger = {
            has_trait = brave
        }
        if = {
            limit = {
                exists = ROOT.primary_spouse
            }

            ROOT.primary_spouse = {
                add_opinion = {
                    target = ROOT
                    modifier = trusting_spouse_opinion
                    opinion = 30
                }
            }
        }

        ordered_courtier = {
            limit = {
                is_available_ai_adult = yes
                is_female = no
#                prowess>= decent_skill_rating
                prowess>= 30
                NOT = {
                    is_spouse_of = ROOT
                }
                NOR = {
                   has_trait = craven
                }
            }
            order_by = prowess
            save_scope_as = target_courtier
        }

        if = {
            limit = {
                exists = scope:target_courtier
            }
            scope:target_courtier = {
                add_prestige = {
                    value = prestige
                    multiply = medium_piety_coefficient_positive
                }
                add_opinion = {
                    target = ROOT
                    modifier = thank_liege_opinion
                    opinion = 20
                }
            }

            add_prestige = {
                value = prestige_level
                multiply = medium_prestige_coefficient_positive
            }
            custom_tooltip = report_dragon.0001.tooltip.brave.1
        }else = {
            stress_impact = {
                # there are not any brave courtier.
                brave = miniscule_stress_impact_gain
            }

            add_prestige = {
                value = prestige_level
                multiply = medium_prestige_coefficient_negative
            }

            custom_tooltip = report_dragon.0001.tooltip.brave.2
        }

        flavor = {
            triggered_desc = {
                trigger = {
                    NOT = { exists =  scope:target_courtier}
                }
                desc = report_dragon.0001.flavor.brave.2
            }
            triggered_desc = {
                trigger = {
                    exists =  scope:target_courtier
                }
                desc = report_dragon.0001.flavor.brave.1
            }
        }
    }

    option = {
        trigger = {
            NOR =   {
                has_trait = brave
                has_trait = gluttonous
                has_trait = honest
                has_trait = patient
                has_trait = shy
                has_trait = stubborn
                has_trait = humble
                has_trait = zealous
                has_trait = diligent
                has_trait = ambitious
                has_trait = arrogant
                has_trait = cynical
                has_trait = content
                has_trait = lazy
                has_trait = impatient
                has_trait = clam
                has_trait = craven
            }
        }
        name = report_dragon.0001.option.nor
    }
}

# send a search party and get result
report_dragon.0002 = {

    title = report_dragon.0002.t
    desc = report_dragon.0002.d
    theme = rival_relation
    background = council_chamber

    right_portrait = {
        character = ROOT
        animation = shock
    }

    left_portrait = {
        character = scope:target_courtier
        animation = fear
    }

    immediate = {
        global_var:begin_county = {
            save_scope_as = develop_county
        }
        scope:develop_county = {
            remove_county_modifier = destroy_by_dragon_modifier
        }
    }

    option = {
        name =  report_dragon.0002.option.craven
        trigger = {
            OR = {
                # fickle or deceitful or paranoid
                has_trait = craven
            }
        }
        scope:target_courtier = {
            if = {
                limit = {
                    NOT = {
                        has_trait = craven
                    }
                }
                add_opinion = {
                    target = ROOT
                    modifier = disappointed_opinion
                    opinion = -10
                }
            }
        }
    }

    option = {
        name =  report_dragon.0002.option.normal_0
        flavor = report_dragon.0002.flavor.normal_0
        custom_tooltip = report_dragon.0002.flavor.normal_0
        set_global_variable = {
            name = ready_to_killer_dragon
            value = yes
            year = 10
        }
    }

    option = {
        name =  report_dragon.0002.option.normal_1
        flavor = report_dragon.0002.flavor.normal_1
        custom_tooltip = report_dragon.0002.flavor.normal_1
    }
}