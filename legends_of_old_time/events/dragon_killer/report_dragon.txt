
namespace = report_dragon

#####################

## Report & Searching Dragon Events

# report_dragon.0001 see dragon
# report_dragon.0001 send a search party

# by will
#####################



scripted_trigger report_dragon_has_mountains = {
    # Target is located in an appropriate region & has suitable terrain.
    OR = {
        terrain = mountains
    }
}




# see dragon and make county be destructed
report_dragon.0001 = {

    title = report_dragon.0001.t
    desc = report_dragon.0001.d
    theme = secret

	right_portrait = {
    		character = ROOT
    		animation = worry
    }
	left_portrait = {
        trigger_if = {
            limit = {
                is_married = yes
            }
        }
        character = ROOT.primary_spouse
        animation = worry
    }

    trigger = {
        is_landed = yes
        # is_in_civil_war = no
        NOT = {
            exists = had_report_dragon_0001
        }
    }

    immediate = {
        random_realm_province = {
            limit = {
                report_dragon_has_mountains = yes
            }
            alternative_limit = {
                report_dragon_has_mountains = yes
            }
            county = {
                save_scope_as = develop_county
            }
        }

        # todo check target_courtier is null or not.
 		add_character_flag = {
			flag = destroy_by_dragon_modifier
			days = 365
		}
		hidden_effect = {
		    scope:develop_county = {
                add_county_modifier = {
                    modifier = destroy_by_dragon_modifier
                    year = destroy_by_dragon_modifier_time
                }
            }
		}

        set_global_variable = {
             name = begin_county
             value = scope:develop_county
        }

        set_global_variable = {
             name = had_report_dragon_0001
             value = yes
             days = had_report_dragon_0001_interval
        }
	}
    option = {
        name = report_dragon.0001.option.deceitful
        trigger = {
            OR = {
                # fickle or deceitful or paranoid
                has_trait = fickle
                has_trait = deceitful
                has_trait = paranoid
            }
        }
        has_trait = fickle
        has_trait = deceitful
        has_trait = paranoid
    }

    option = {
        name = report_dragon.0001.option.sadistic
        trigger = {
            has_trait = sadistic
        }
        stress_impact = {
            sadistic = minor_stress_impact_loss
        }
        # todo get a not honest
        ordered_courtier = {
            limit = {
                is_available_ai_adult = yes
            }
            order_by = opinion
            save_scope_as = target_courtier
        }

        # todo flavor
        flavor = "派出一个不满你统治的人去看看。"
        # todo custom_tooltip
        custom_tooltip = report_dragon.0001.tooltip.a

        # searching effect
        trigger_event = {
            id = report_dragon.0002
        }
        trait = sadistic
    }


    option = {
        name = report_dragon.0001.option.calm
        trigger = {
            has_trait = calm
        }
        trait = calm
    }
    option = {
        name = report_dragon.0001.option.craven
        trigger = {
            has_trait = craven
        }
        trait = craven
        stress_impact = {
            craven = miniscule_stress_impact_gain
        }
        ROOT.primary_spouse =  {
            if = {
                limit = {
                    NOT = {has_trait = craven}
                    NOT = {has_trait = compassionate}
                }
                add_opinion = {
                    target = ROOT
                    modifier = weak_excuses
                }
            }
            else = {
                add_opinion = {
                    target = ROOT
                    modifier = pity_opinion
                    opinion = 15
                }
            }
        }
    }
    option = {
        name = report_dragon.0001.option.humble
        trigger = {
            OR = {
                has_trait = humble
                has_trait = zealous
            }
        }
        ordered_courtier = {
            limit = {
                is_available_ai_adult = yes
            }
            order_by = learning
            max = 1
            save_scope_as = target_courtier
        }
        trait = humble
        trait = zealous

        add_piety = 50

        # todo flavor
        flavor = "派出一个虔诚的人。"
        # todo custom_tooltip
        custom_tooltip = report_dragon.0001.tooltip.b
        has_trait = diligent
        has_trait = ambitious

        add_prestige = 40

        # searching effect
        trigger_event = {
            id = report_dragon.0002
            days = {10 20}
        }

    }

    option = {
        name = report_dragon.0001.option.diligent
        trigger = {
            OR = {
                has_trait = diligent
                has_trait = ambitious
            }
        }

        random_courtier = {
            limit = {
                is_available_ai_adult = yes
            }
            save_scope_as = target_courtier
        }
        # todo flavor
        flavor = "派出一个精明的人去看看。"
        # todo custom_tooltip
        custom_tooltip = report_dragon.0001.tooltip.c
        has_trait = diligent
        has_trait = ambitious

        add_prestige = 40

        # searching effect
        trigger_event = {
            id = report_dragon.0002
            days = {10 20}
        }

        # todo learn grammar from  `hold_court.6200`

    }
    option = {
        # arrogant or cynical
        name = report_dragon.0001.option.arrogant
        trigger = {
            OR = {
                has_trait = arrogant
                has_trait = cynical
            }
        }
        has_trait = arrogant
        has_trait = cynical
    }

    option = {
        # content or lazy or impatient
        name = report_dragon.0001.option.lazy
        trigger = {
            OR = {
                has_trait = content
                has_trait = lazy
                has_trait = impatient
            }
        }
        has_trait = content
        has_trait = lazy
        has_trait = impatient

        ROOT.primary_spouse =  {
            if = {
                limit = {
                    NOR = {
                        has_trait = content
                        has_trait = lazy
                        has_trait = impatient
                    }
                }
                add_opinion = {
                    target = ROOT
                    modifier = disappointed_opinion
                    opinion = -10
                }
            }
            else = {
                add_opinion = {
                    target = ROOT
                    modifier = pleased_opinion
                    opinion = 15
                }
            }
        }
    }


    option = {
        name = report_dragon.0001.option.honest
        trigger = {
            OR = {
                has_trait = honest
                has_trait = stubborn
            }
        }
        #has_trait = honest
        #has_trait = stubborn

        ordered_courtier = {
            limit = {
                is_available_ai_adult = yes
            }
            # get honest number
            order_by = {
                value = opinions
                multiply = -1
            }
            save_scope_as = target_courtier
        }
        # searching effect
        trigger_event = {
            id = report_dragon.0002
            days = 1
        }

        # todo flavor
        flavor = "派出一个忠诚的人去看看。"
        custom_tooltip = report_dragon.0001.tooltip.d
    }

    option = {
        name = report_dragon.0001.option.shy
        trigger = {
            has_trait = shy
        }
        has_trait = shy
    }
    option = {
        name = report_dragon.0001.option.patient
        trigger = {
            has_trait = patient
        }
        has_trait = patient
    }
    option = {
        name = report_dragon.0001.option.gluttonous
        trigger = {
            has_trait = gluttonous
        }
        has_trait = gluttonous
        ROOT.primary_spouse =  {
            if = {
                limit = {
                    NOT = {
                        has_trait = gluttonous
                    }
                }
                add_opinion = {
                    target = ROOT
                    modifier = bored_opinion
                    opinion = -10
                }
            }
            else = {
                add_opinion = {
                    target = ROOT
                    modifier = pleased_opinion
                    opinion = 20
                }
            }
        }
    }
    option = {
        name = report_dragon.0001.option.brave
        trigger = {
            has_trait = brave
        }
        has_trait = brave
        ROOT.primary_spouse = {
            add_opinion = {
                target = ROOT
                modifier = trusting_spouse_opinion
                opinion = 30
            }
        }
    }

    option = {
        trigger = {
            NOR =   {
                has_trait = brave
                has_trait = gluttonous
                has_trait = honest
                has_trait = patient
                has_trait = shy
                has_trait = honest
                has_trait = stubborn
                has_trait = humble
                has_trait = zealous
                has_trait = diligent
                has_trait = ambitious
                has_trait = arrogant
                has_trait = cynical
                has_trait = content
                has_trait = lazy
                has_trait = impatient
                has_trait = clam
                has_trait = craven
            }
        }
        name = report_dragon.0001.option.nor
    }
}

# send a search party
report_dragon.0002 = {

    title = report_dragon.0002.t
    desc = report_dragon.0002.d
    theme = hunt_activity
    right_portrait = {
        character = ROOT
        animation = war_attacker
    }
    #immediate = {
    #    random_realm_county = {
    #        limit = {
    #            has_county_modifier = destroy_by_dragon_modifier
    #        }
    #        save_scope_as = develop_county
    #    }
    #}

    immediate = {

        ROOT.primary_spouse = {
            add_opinion = {
                target = ROOT
                modifier = trusting_spouse_opinion
                opinion = 30
            }
        }

        global_var:begin_county = {
            save_scope_as = develop_county
        }
    }

    option = {
        name = report_dragon.0002.option.a
        scope:develop_county = {
            remove_county_modifier = destroy_by_dragon_modifier
        }
    }

        # add planning_an_activity make ROOT not move to other county
        #add_character_flag = {
        # 			flag = planning_an_activity
        # 			days = 30
        # 		}

        # move to province ?
        #$HOLY_SITE$.title_province = {
        #		spawn_activity = {
        #			owner = root
        #			type = activity_pilgrimage
        #		}
        #	}

}